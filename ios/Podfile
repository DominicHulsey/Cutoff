# First run our setup script if we're in a CI environment
if ENV['CI'] == 'true'
  system('./setup-react-native.sh') || raise("Failed to run setup script")
end

# Resolve react_native_pods.rb with a more resilient approach that works in CI
react_native_path = '../node_modules/react-native'

# Try multiple approaches to load the React Native pods script
begin
  # First try direct require_relative
  require_relative "#{react_native_path}/scripts/react_native_pods.rb"
rescue LoadError
  # If that fails, try using node to resolve it
  begin
    require Pod::Executable.execute_command('node', ['-p',
      'require.resolve("react-native/scripts/react_native_pods.rb", {paths: [process.argv[1]]})', __dir__]).strip
  rescue
    # Last resort: try a direct require with a common path pattern
    begin
      require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods.rb")
    rescue
      # If all else fails, use our local fallback
      if File.exist?("./react_native_pods.rb")
        require "./react_native_pods.rb"
      else
        raise "Could not find react_native_pods.rb"
      end
    end
  end
end

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Rewire' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end
